process.chdir(__dirname)
const cliProgress = require('cli-progress')
const { stripIndents } = require('common-tags')
const moment = require('moment')
const path = require('path')
const fs = require('fs')
const fileName = __filename.split(/(\\|\/)/g).pop().split('.')[0]
const data = require(path.join(process.cwd(), `./../data/${fileName}.json`))
const lBar = new cliProgress.Bar({
  format: '  {bar} {percentage}% | Elapsed: {duration_formatted} | ETA: {eta_formatted} | {value}/{total}'
}, cliProgress.Presets.shades_classic); lBar.start(data.rules.length + 5)

var text = ''
text += stripIndents`
  # :scales: __**Rules**__

  > Last Updated ${moment(new Date()).format('YYYY/MM/DD HH:mm:SS')}
`; text += '\n\n---'; lBar.increment()

data.rules.forEach(r => {
  if (!!data.classes.find(c => c.name === r.class )) {
    text += `\n- ${r.content} **(${r.class})**`; lBar.increment()
  } else {
    lBar.stop(); throw new Error(`'${r.class}' is not a valid class.`)
  }
})

text += `\n\n*You can use \`/ticket add [info about the problem]\` to report violations.*\n\n# :bookmark: Rule Violations\n`; lBar.increment()
lBar.setTotal(lBar.total + data.classes.length)
data.classes.forEach(c => {
  text += `- **${c.name}:** ${c.content}\n`; lBar.increment()
})

text += '\n\n__***These rules are subject to change and will be edited as need be. It is your responsibility to keep up to date with the rules.***__'; lBar.increment()

text += `\n\n---\n#### Generated by \`src/compilers/${fileName}.js\`. ðŸš€\n`; lBar.increment()
fs.writeFile(path.join(process.cwd(), `./../built/${fileName}.md`), text, error => {
  if (error) {
    console.error(error)
    lBar.stop(); process.exit(1)
  } else {
    lBar.increment(); lBar.stop(); process.exit(0)
  }
})
